#!/bin/bash

# If you're using this as a service, this script should be installed to /usr/bin/, and everything else should be in ~/.config/keebie/

if [[ ! -d $HOME/.config/keebie ]]; then # Creates ~/.config/keebie if it doesnt exist
	mkdir -p $HOME/.config/keebie
fi 

cd $HOME/.config/keebie/
DEVLIST=devlist

launch() { 
	if [[ -f "$DEVLIST" ]]; then
		# if the devlist file exists, try to launch in devlist mode
		devlist
	else
		# launches like normal, should pass along any args to the script
		python keebie.py "$@" &
	fi
}

help() { 
	# A place to put all the crap im gonna shove into this launch script
	echo "Keebie - Created by Robin Universe & Friends"
	echo "-k | --detect: 	A tool to quickly determine what device file a keyboard is using"
	echo "-i | --install:	Installs this script to /usr/bin/ and copies the service file to /usr/lib/systemd/system/"
	echo "-d | --devlist:	Launches a copy of keebie for each device specified in ~/.config/keebie/devlist"
	echo "-h | --help: 	You best start believing in help pages, you're looking at one"
}

devlist() { 
	# This will read from a devlist file, and launch keebie with the --device arg for each device in the list
	# This should allow for automatically starting with more than one additional keyboard
	cat devlist | while read line
		do
			python keebie.py --device "$line" &
		done
}

installfunc() {
	# Installs this script
	echo "Copying this script to /usr/bin."
	sudo cp keebie /usr/bin/keebie
	echo "Copying keebie.service to /usr/lib/systemd/system"
	sudo cp keebie.service /usr/lib/systemd/system/keebie.service
	echo "to enable service please run 'sudo systemctl enable keebie.service'"
}

detectKB() {
	echo "In 3 seconds, please press a key on the keyboard you would like to use, then wait."
	sleep 1s
	printf "."
	sleep 1s
	printf "."
	sleep 1s
	printf "."
	sleep 1s
	echo ""
	echo "Press a key on the desired device (Don't move your mouse or press any buttons on any other keyboards!)"
	DEV=`inotifywatch /dev/input/by-id/* -t 3 2>&1 | grep /dev/input/by-id/ | awk 'NF{ print $NF }'`
	echo ""
	if [[ -z "$DEV" ]]; then
		echo "No devices detected, please try again"
		detectKB
	else
		echo "Your device file is $DEV"
		if ! [[ $(stat -c "%A" $DEV) =~ "r" ]]; then
			echo "You have read permission on this file!"
		else
			echo "You do not currently have read permissions on this file" 
			read -r -p "Would you like to change the file perms? [Y/n] " response
			case "$response" in
			    [nN][oO][nN]) 	sudo chmod +r $DEV	;;
			    *)				exit					;;
			esac
			
		fi
	fi
}

case $1 in
	"-h" | "--help"		)	help		;;
	"-d" | "--devlist"	)	devlist		;;
	"-i" | "--install"	)	installfunc ;;
	"-k" | "--detect"	)	detectKB	;; 
	*)						launch		;;
esac